[{"path":"https://au-envs-bioinformatics.github.io/RauENVS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 RauENVS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/parse_antismash.html","id":"set-up","dir":"Articles","previous_headings":"Antismash","what":"Set up","title":"Parse AntiSmash and BigScape","text":"First, need identify json files:","code":"library(RauENVS) antismash_directory <- system.file(   \"antismash_example_directory\",package =  \"RauENVS\"   ) # Edit this to your actual file!!! and remove or comment the example file # For example: # antismash_directory <- \"/mnt\" list_jsons <- function(dir) list.files(   dir, \".json$\", full.names = T,recursive = T,include.dirs = T   ) (jsons <- list_jsons(antismash_directory)) #> [1] \"/home/runner/work/_temp/Library/RauENVS/antismash_example_directory/antismash.json\" (genome_ids <- stringr::str_match(basename(jsons), \"(^.+)\\\\.json\")[,2]) #> [1] \"antismash\" names(jsons) <- genome_ids"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/parse_antismash.html","id":"get-features","dir":"Articles","previous_headings":"Antismash","what":"Get features","title":"Parse AntiSmash and BigScape","text":"Now, want extract features json file. Features large list, inspect carefully. many lists json files:","code":"features <- get_antismash_features(jsons, c(\"region\", \"aSModule\")) stopifnot(length(features) == length(jsons))"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/parse_antismash.html","id":"regions","dir":"Articles","previous_headings":"","what":"Regions","title":"Parse AntiSmash and BigScape","text":"Now, extracting regions: notice product column nested (cell list values). can either paste different values: can unnest DataFrame creating new row per product: Remember “save” processed dataframe saving file. example:","code":"regions <- get_antismash_regions(features) regions |>   head(30) |>   knitr::kable() regions |>   dplyr::mutate(     product = purrr::map(product, paste0, collapse = \",\") |>       as.character()     ) |>   head(30) |>   knitr::kable() regions |>   tidyr::unnest(\"product\")|>   head(30) |>   knitr::kable() regions_unnest <- regions |>   tidyr::unnest(\"product\") #write.csv(regions_unnest, \"regions.csv\")"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/parse_antismash.html","id":"modules","dir":"Articles","previous_headings":"Regions","what":"Modules","title":"Parse AntiSmash and BigScape","text":"Now, extract modules:","code":"modules <- get_antismash_modules(features) # write.csv(modules, \"/mnt/modules.csv\") modules |>   head(30) |>   knitr::kable()"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/parse_antismash.html","id":"bigscape","dir":"Articles","previous_headings":"","what":"BigScape","title":"Parse AntiSmash and BigScape","text":"First, create DataFrame clustering information: can extract information. example, finding GCFs Finally, read network information:","code":"bigscape_directory <- system.file(   \"bigscape_example_directory\",package =  \"RauENVS\"   ) # Edit this to your actual file!!! and remove or comment the example file # For example: # bigscape_directory <- \"/mnt/\" bigscape_clusters <- get_bigscape_clustering(bigscape_directory) #write_csv(bigscape_clusters, \"/mnt/bigscape_df.csv\") bigscape_clusters |>   head(30) |>   knitr::kable() library(tidyverse) bigscape_clusters |>     select(bgc_id, starts_with('GCF')) |>     filter(str_detect(bgc_id, \"^BGC\\\\d{7}\\\\.1\")) |>     select(-bgc_id) |>     pull() #> character(0) bigscape_networks <- get_bigscape_networks(bigscape_directory) #write_csv(bigscape_networks, \"/mnt/bigscape_networks.csv\") bigscape_networks |>   head(30) |>   knitr::kable()"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"read-your-data","dir":"Articles","previous_headings":"","what":"Read your data","title":"Phyloseq analysis template","text":"need 3 tabulated files contains metadata, OTU taxonomy, respectively. Please make sure read data correctly. Delete code generates toy example uncomment code reads files.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"read-metadata-table","dir":"Articles","previous_headings":"Read your data","what":"Read metadata table","title":"Phyloseq analysis template","text":"metadata table must contain column named rowname many features desired. Either edit tabulated file rename column sample identifier. metadata table look something like example . assigning variable inside () print summary.","code":"# (metadata_tbl <- readr::read_csv(\"metadata_dummy.csv\")) metadata_tbl <- phyloseq_template_toy_data$meta knitr::kable(metadata_tbl)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"read-otu-table","dir":"Articles","previous_headings":"Read your data","what":"Read OTU table","title":"Phyloseq analysis template","text":"Please, make sure take account table tabulated using “,”, “;” tabs. otu table look something like example .","code":"# otu_tbl <- readr::read_csv(\"otu_dummy.csv\") otu_tbl <- phyloseq_template_toy_data$otu otu_tbl |> head() |> knitr::kable()"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"read-otu-table-1","dir":"Articles","previous_headings":"Read your data","what":"Read OTU table","title":"Phyloseq analysis template","text":"Please, make sure take account table tabulated using “,”, “;” tabs. taxonomic table look something like example .","code":"# taxonomic_tbl <- readr::read_csv(\"taxonomic_dummy.csv\") taxonomic_tbl <- phyloseq_template_toy_data$taxa taxonomic_tbl |> head() |> knitr::kable()"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"sanity-check","dir":"Articles","previous_headings":"Read your data","what":"Sanity check","title":"Phyloseq analysis template","text":"","code":"stopifnot(ncol(otu_tbl) == nrow(metadata_tbl)) stopifnot(nrow(otu_tbl) == nrow(taxonomic_tbl))"},{"path":[]},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"transform-into-phyloseq-object","dir":"Articles","previous_headings":"Preprocess your data","what":"Transform into phyloseq object","title":"Phyloseq analysis template","text":"Now, combine OTU table, taxonomy table metadata phyloseq object.","code":"otu <- otu_tbl |>   phyloseq::otu_table(taxa_are_rows = TRUE)  taxa <- taxonomic_tbl |>   as.matrix() |>   phyloseq::tax_table()  meta <- metadata_tbl|>   tibble::column_to_rownames(var = \"rowname\")|>   phyloseq::sample_data() (physeq <- phyloseq(otu, taxa, meta)) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 3728 taxa and 29 samples ] #> sample_data() Sample Data:       [ 29 samples by 4 sample variables ] #> tax_table()   Taxonomy Table:    [ 3728 taxa by 7 taxonomic ranks ]"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"dealing-with-taxonomic-categories","dir":"Articles","previous_headings":"Preprocess your data","what":"Dealing with taxonomic categories","title":"Phyloseq analysis template","text":"remove SILVA prefix, anything labelled “unknown” (affect abundances) replace spaces underscores.","code":"#|label: prepro-taxa # Remove prefix tax_table(physeq) <- gsub(\"Unknown.*\", \"\", tax_table(physeq)) tax_table(physeq) <- tax_table(physeq) |>   remove_silva_prefix_from_taxtable()"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"data-cleaning","dir":"Articles","previous_headings":"Preprocess your data","what":"Data cleaning","title":"Phyloseq analysis template","text":"may want custom data cleaning using function subset_taxa. example, can remove taxa belong SAR Kingdom groups. Notice number taxa reduced.","code":"physeq <- physeq |>   subset_taxa(Kingdom != \"SAR\") physeq #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 3615 taxa and 29 samples ] #> sample_data() Sample Data:       [ 29 samples by 4 sample variables ] #> tax_table()   Taxonomy Table:    [ 3615 taxa by 7 taxonomic ranks ]"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"making-unique-otu-labels","dir":"Articles","previous_headings":"","what":"Making unique OTU labels","title":"Phyloseq analysis template","text":"function make_physeq_tax_label_unique work “empty” taxonomic ranks encoded ““. Please, make sure running function. Otherwise, get ugly unique OTU labels (purpose). First, create new labels: , everything looks fine, assign new labels.","code":"stopifnot(   all(!grepl(\" \", tax_table(physeq), fixed=TRUE)) ) stopifnot(   all(!is.na(tax_table(physeq))) ) new_otu_labels <-  tax_table(physeq) |>   make_physeq_tax_label_unique() head(new_otu_labels) #> [1] \"0319-6G20\"         \"Kineosporia\"       \"OM1clade\"          #> [4] \"Ca.Parcubacteria\"  \"Nitrosomonadaceae\" \"Ca.Solibacter\" taxa_names(physeq) <- new_otu_labels"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"transform-sample-counts","dir":"Articles","previous_headings":"Making unique OTU labels","what":"Transform sample counts","title":"Phyloseq analysis template","text":"transform counts, , depend experiment factors number replicates.","code":"physeq_rel <- physeq |>   transform_sample_counts(function(x) x/sum(x)*100)    physeq_mean_rel <-  physeq_rel |>   merge_samples(\"depth\") |>   transform_sample_counts(function(x) x/sum(x)*100)        sample_sums(physeq_mean_rel) #>  10  20  30  40  50  60  70  80  90 100  #> 100 100 100 100 100 100 100 100 100 100"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"inspect-data","dir":"Articles","previous_headings":"","what":"Inspect data","title":"Phyloseq analysis template","text":"Now, can inspect resulting tables: Check everything looks good:","code":"physeq_rel |>   otu_table()|>   as.data.frame() |>   head() |>   knitr::kable() physeq_rel |>   tax_table()|>   as.data.frame() |>   head() |>   knitr::kable() #|label: sample_sums sample_sums(physeq) #>   TK20-2   TK20-3   TK20-4   TK20-5   TK20-6   TK20-7   TK20-8   TK20-9  #>  5718973  4601365  3817254  3203439  2853679  8864332  2423598  5369228  #>  TK20-10  TK20-11  TK20-12  TK20-13  TK20-14  TK20-15  TK20-16  TK20-17  #>  2741181  3192877 10543326  3553206 21866346  2246072 22745242  5973567  #>  TK20-18  TK20-19  TK20-20  TK20-21  TK20-22  TK20-23  TK20-24  TK20-25  #>  3103575  2691406    23752  2153359  7644775  3084344  4072591  4390303  #>  TK20-26  TK20-27  TK20-28  TK20-29  TK20-30  #>  3966687  5019554    99428  3638618  2162107 sample_names(physeq) #>  [1] \"TK20-2\"  \"TK20-3\"  \"TK20-4\"  \"TK20-5\"  \"TK20-6\"  \"TK20-7\"  \"TK20-8\"  #>  [8] \"TK20-9\"  \"TK20-10\" \"TK20-11\" \"TK20-12\" \"TK20-13\" \"TK20-14\" \"TK20-15\" #> [15] \"TK20-16\" \"TK20-17\" \"TK20-18\" \"TK20-19\" \"TK20-20\" \"TK20-21\" \"TK20-22\" #> [22] \"TK20-23\" \"TK20-24\" \"TK20-25\" \"TK20-26\" \"TK20-27\" \"TK20-28\" \"TK20-29\" #> [29] \"TK20-30\" rank_names(physeq) #> [1] \"Kingdom\" \"Phylum\"  \"Class\"   \"Order\"   \"Family\"  \"Genus\"   \"Species\" sample_variables(physeq) #> [1] \"layer\" \"age\"   \"pH\"    \"depth\""},{"path":[]},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"perform-an-ordination-using-nonmetric-multidimensional-scaling","dir":"Articles","previous_headings":"Data analysis","what":"Perform an ordination using Nonmetric Multidimensional Scaling","title":"Phyloseq analysis template","text":"Now, ordinate using NMDS method bray distance. NMDS performs Non-metric MultiDimenstional Scaling sample-wise ecological distance matrix onto user-specified number axes, k (case 2).","code":"(physeq_nmds <- ordinate(physeq_rel, method = \"NMDS\", distance = \"bray\")) #> Wisconsin double standardization #> Run 0 stress 0.0634  #> Run 1 stress 0.0634  #> ... Procrustes: rmse 1.88e-05  max resid 5.13e-05  #> ... Similar to previous best #> Run 2 stress 0.0841  #> Run 3 stress 0.0959  #> Run 4 stress 0.0931  #> Run 5 stress 0.0898  #> Run 6 stress 0.0634  #> ... Procrustes: rmse 1.2e-05  max resid 3.03e-05  #> ... Similar to previous best #> Run 7 stress 0.0634  #> ... Procrustes: rmse 9.7e-06  max resid 2.64e-05  #> ... Similar to previous best #> Run 8 stress 0.0634  #> ... Procrustes: rmse 8.49e-06  max resid 2.06e-05  #> ... Similar to previous best #> Run 9 stress 0.0848  #> Run 10 stress 0.0848  #> Run 11 stress 0.0634  #> ... New best solution #> ... Procrustes: rmse 1.55e-05  max resid 4.08e-05  #> ... Similar to previous best #> Run 12 stress 0.1  #> Run 13 stress 0.0898  #> Run 14 stress 0.0634  #> ... Procrustes: rmse 5.99e-05  max resid 0.000164  #> ... Similar to previous best #> Run 15 stress 0.0894  #> Run 16 stress 0.0898  #> Run 17 stress 0.0634  #> ... Procrustes: rmse 1.57e-05  max resid 4.12e-05  #> ... Similar to previous best #> Run 18 stress 0.0893  #> Run 19 stress 0.0874  #> Run 20 stress 0.0898  #> *** Best solution repeated 3 times #>  #> Call: #> metaMDS(comm = veganifyOTU(physeq), distance = distance)  #>  #> global Multidimensional Scaling using monoMDS #>  #> Data:     wisconsin(veganifyOTU(physeq))  #> Distance: bray  #>  #> Dimensions: 2  #> Stress:     0.0634  #> Stress type 1, weak ties #> Best solution was repeated 3 times in 20 tries #> The best solution was from try 11 (random start) #> Scaling: centring, PC rotation, halfchange scaling  #> Species: expanded scores based on 'wisconsin(veganifyOTU(physeq))'"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"goodness-of-fit-and-shepard-plot-for-nonmetric-multidimensional-scaling","dir":"Articles","previous_headings":"Data analysis","what":"Goodness of Fit and Shepard Plot for Nonmetric Multidimensional Scaling","title":"Phyloseq analysis template","text":"Now, find goodness fit measure points previous nonmetric multidimensional scaling. Shepard diagram shown following figure: plot ordination distances monotone linear fit line original dissimilarities. Now, ’ll create function ) ordinate b) plot. way ’ll able plot different subsets taxa time. can plot plot individually: use plot_grid list plots:","code":"vegan::stressplot(physeq_nmds) plot_nmds <- function(x, ...){   y <-ordinate(x, method = \"NMDS\", distance = \"bray\")   plot_ordination(x, y, ...)+   geom_point(size=3)+   theme(     legend.title = element_blank(),     legend.position = \"right\"   )+   stat_ellipse() }  nmds <- list(   all = plot_nmds(     physeq_rel,type =\"samples\", color = \"layer\",shape = \"layer\"     ),   phyla = physeq_rel |>     tax_glom(taxrank = \"Phylum\", NArm = FALSE) |>     plot_nmds(       type =\"samples\", color = \"layer\", shape = \"layer\"       ),   class = physeq_rel |>     tax_glom(taxrank = \"Class\", NArm = FALSE) |>     plot_nmds(       type =\"samples\", color = \"layer\", shape = \"layer\"       ) ) #> Wisconsin double standardization #> Run 0 stress 0.0634  #> Run 1 stress 0.0634  #> ... Procrustes: rmse 3.99e-05  max resid 0.000112  #> ... Similar to previous best #> Run 2 stress 0.0894  #> Run 3 stress 0.0841  #> Run 4 stress 0.0908  #> Run 5 stress 0.0634  #> ... New best solution #> ... Procrustes: rmse 1.15e-05  max resid 3.01e-05  #> ... Similar to previous best #> Run 6 stress 0.0634  #> ... Procrustes: rmse 2.55e-05  max resid 6.96e-05  #> ... Similar to previous best #> Run 7 stress 0.0634  #> ... New best solution #> ... Procrustes: rmse 5.26e-06  max resid 1.21e-05  #> ... Similar to previous best #> Run 8 stress 0.0634  #> ... Procrustes: rmse 1.95e-05  max resid 4.93e-05  #> ... Similar to previous best #> Run 9 stress 0.0848  #> Run 10 stress 0.1  #> Run 11 stress 0.0634  #> ... Procrustes: rmse 1.3e-05  max resid 3.28e-05  #> ... Similar to previous best #> Run 12 stress 0.0634  #> ... Procrustes: rmse 1.23e-05  max resid 3.34e-05  #> ... Similar to previous best #> Run 13 stress 0.0634  #> ... Procrustes: rmse 1.37e-05  max resid 3.63e-05  #> ... Similar to previous best #> Run 14 stress 0.0821  #> Run 15 stress 0.0634  #> ... Procrustes: rmse 4.4e-05  max resid 0.000118  #> ... Similar to previous best #> Run 16 stress 0.0634  #> ... Procrustes: rmse 6.43e-05  max resid 0.000177  #> ... Similar to previous best #> Run 17 stress 0.0898  #> Run 18 stress 0.0821  #> Run 19 stress 0.0634  #> ... New best solution #> ... Procrustes: rmse 3.45e-06  max resid 9.16e-06  #> ... Similar to previous best #> Run 20 stress 0.0634  #> ... Procrustes: rmse 1.44e-05  max resid 3.6e-05  #> ... Similar to previous best #> *** Best solution repeated 2 times #> Square root transformation #> Wisconsin double standardization #> Run 0 stress 0.0653  #> Run 1 stress 0.0653  #> ... Procrustes: rmse 7.76e-06  max resid 3.29e-05  #> ... Similar to previous best #> Run 2 stress 0.112  #> Run 3 stress 0.0877  #> Run 4 stress 0.0653  #> ... Procrustes: rmse 4.04e-06  max resid 1.4e-05  #> ... Similar to previous best #> Run 5 stress 0.0653  #> ... Procrustes: rmse 8.45e-06  max resid 3.45e-05  #> ... Similar to previous best #> Run 6 stress 0.112  #> Run 7 stress 0.116  #> Run 8 stress 0.0877  #> Run 9 stress 0.112  #> Run 10 stress 0.0653  #> ... New best solution #> ... Procrustes: rmse 1.59e-06  max resid 6.39e-06  #> ... Similar to previous best #> Run 11 stress 0.0653  #> ... Procrustes: rmse 3.55e-06  max resid 1.52e-05  #> ... Similar to previous best #> Run 12 stress 0.0877  #> Run 13 stress 0.0653  #> ... Procrustes: rmse 3.28e-06  max resid 1.13e-05  #> ... Similar to previous best #> Run 14 stress 0.0653  #> ... Procrustes: rmse 3.41e-06  max resid 1.4e-05  #> ... Similar to previous best #> Run 15 stress 0.112  #> Run 16 stress 0.128  #> Run 17 stress 0.0653  #> ... Procrustes: rmse 1.42e-05  max resid 5.79e-05  #> ... Similar to previous best #> Run 18 stress 0.0653  #> ... Procrustes: rmse 1.71e-05  max resid 7.43e-05  #> ... Similar to previous best #> Run 19 stress 0.0874  #> Run 20 stress 0.112  #> *** Best solution repeated 6 times #> Square root transformation #> Wisconsin double standardization #> Run 0 stress 0.0983  #> Run 1 stress 0.0959  #> ... New best solution #> ... Procrustes: rmse 0.0844  max resid 0.361  #> Run 2 stress 0.103  #> Run 3 stress 0.0886  #> ... New best solution #> ... Procrustes: rmse 0.0856  max resid 0.368  #> Run 4 stress 0.0717  #> ... New best solution #> ... Procrustes: rmse 0.102  max resid 0.357  #> Run 5 stress 0.087  #> Run 6 stress 0.0717  #> ... Procrustes: rmse 0.000102  max resid 0.000433  #> ... Similar to previous best #> Run 7 stress 0.0717  #> ... Procrustes: rmse 0.00526  max resid 0.0225  #> Run 8 stress 0.087  #> Run 9 stress 0.0865  #> Run 10 stress 0.105  #> Run 11 stress 0.0717  #> ... New best solution #> ... Procrustes: rmse 1.86e-05  max resid 7.67e-05  #> ... Similar to previous best #> Run 12 stress 0.095  #> Run 13 stress 0.105  #> Run 14 stress 0.0865  #> Run 15 stress 0.1  #> Run 16 stress 0.0717  #> ... Procrustes: rmse 0.00525  max resid 0.0225  #> Run 17 stress 0.087  #> Run 18 stress 0.087  #> Run 19 stress 0.085  #> Run 20 stress 0.0983  #> *** Best solution repeated 1 times nmds$all plot_grid(plotlist = nmds)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"richness-plot","dir":"Articles","previous_headings":"Data analysis","what":"Richness plot","title":"Phyloseq analysis template","text":"","code":"###----Richness all----  richness_plot <- plot_richness(   physeq, x=\"layer\", color =  \"depth\",   measures=c(\"Observed\",\"Shannon\",\"Simpson\",\"InvSimpson\")   ) richness_plot <- richness_plot + geom_boxplot(   data = richness_plot$data, aes(color = NULL), alpha = 0.05)+   theme(     legend.title = element_blank(),     legend.position = \"right\"   ) richness_plot"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"stacked-bar-plots","dir":"Articles","previous_headings":"Data analysis","what":"Stacked bar plots","title":"Phyloseq analysis template","text":"Since get many phyla plot stacked barplot, filter low abundant ones put one category. , use tidyverse . First, create normal data frame phyloseq object add another column taxa abundance lower 3% renamed “< 3%”. Now, plot stacked plot. can change colors editing function get_wants_hue. Default optimized colorblindness.  can obtain figures one plot using plot_grid. example: https://wilkelab.org/cowplot/articles/plot_grid.html","code":"physeq_mean_rel_phylum <- physeq_mean_rel |>   tax_glom(taxrank = \"Phylum\") |>   transform_sample_counts(function(x) x/sum(x)*100) physeq_mean_rel_phylumDF <- physeq_mean_rel_phylum |>   #transform phyloseq object to a data frame (DF)   psmelt()|>   #make the phyla characters, not factors   mutate(Phylum = as.character(Phylum))|>   #there are some reads that were assigned only to the kingdom level,    # i.e. NA on the phylum level, so we will rename them   mutate(     Phylum = replace(Phylum, Phylum == \"NA\", \"unassigned\"),     Phylum2 = replace(Phylum, Abundance < 3, \"< 3%\")     )|>   #reorder the phyla so that they are stacked according to abundance   mutate(     Phylum2 = reorder(Phylum2, Abundance)   ) n_phyla <- length(levels(physeq_mean_rel_phylumDF$Phylum2))  stacked_plot <- physeq_mean_rel_phylumDF |>   ggplot(aes(depth, Abundance, fill=Phylum2)) +   geom_bar(stat = \"identity\") +   labs(x= \"depth [cm]\",y= \"Relative abundance [%]\",      fill= \"Phyla\")+   scale_fill_manual(values = get_wants_hue(n_phyla))+   theme(legend.position=\"bottom\") +   scale_x_continuous(breaks = seq(10, 100, 10)) stacked_plot final <- plot_grid(   stacked_plot, richness_plot,nrow = 2,labels = c(\"A\", \"B\")   ) final"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"anova","dir":"Articles","previous_headings":"Data analysis","what":"ANOVA","title":"Phyloseq analysis template","text":"First, create objects microbiome package: Now, use adonis variables interested. probably use adonis2, adonis deprecated. Now layer: several “models”, consider general approach using lists:","code":"otu_microbiome <- microbiome::abundances(physeq) meta_microbiome <- microbiome::meta(physeq)   otu_microbiome |> head() |> knitr::kable() meta_microbiome |> knitr::kable() permanova_depth <- adonis2(   t(otu_microbiome)~depth,   data = meta_microbiome,   permutations=999, method = \"bray\"   ) permanova_depth #> Permutation test for adonis under reduced model #> Terms added sequentially (first to last) #> Permutation: free #> Number of permutations: 999 #>  #> adonis2(formula = t(otu_microbiome) ~ depth, data = meta_microbiome, permutations = 999, method = \"bray\") #>          Df SumOfSqs    R2    F Pr(>F)     #> depth     1     1.91 0.255 9.26  0.001 *** #> Residual 27     5.56 0.745                 #> Total    28     7.46 1.000                 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 permanova_layer <- adonis2(   t(otu_microbiome)~layer,   data = meta_microbiome,   permutations=999, method = \"bray\"   ) permanova_layer #> Permutation test for adonis under reduced model #> Terms added sequentially (first to last) #> Permutation: free #> Number of permutations: 999 #>  #> adonis2(formula = t(otu_microbiome) ~ layer, data = meta_microbiome, permutations = 999, method = \"bray\") #>          Df SumOfSqs    R2    F Pr(>F)     #> layer     3     3.17 0.425 6.15  0.001 *** #> Residual 25     4.30 0.575                 #> Total    28     7.46 1.000                 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 adonis2_formulas <- list(   layer = t(otu_microbiome)~layer,   depth = t(otu_microbiome)~depth ) permanovas <- adonis2_formulas |>   map(     adonis2, data = meta_microbiome,     permutations=999, method = \"bray\"     ) permanovas$layer #> Permutation test for adonis under reduced model #> Terms added sequentially (first to last) #> Permutation: free #> Number of permutations: 999 #>  #> .f(formula = .x[[i]], data = ..1, permutations = 999, method = \"bray\") #>          Df SumOfSqs    R2    F Pr(>F)     #> layer     3     3.17 0.425 6.15  0.001 *** #> Residual 25     4.30 0.575                 #> Total    28     7.46 1.000                 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 permanovas$depth #> Permutation test for adonis under reduced model #> Terms added sequentially (first to last) #> Permutation: free #> Number of permutations: 999 #>  #> .f(formula = .x[[i]], data = ..1, permutations = 999, method = \"bray\") #>          Df SumOfSqs    R2    F Pr(>F)     #> depth     1     1.91 0.255 9.26  0.001 *** #> Residual 27     5.56 0.745                 #> Total    28     7.46 1.000                 #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"multivariate-homogeneity-of-groups-dispersions","dir":"Articles","previous_headings":"Data analysis","what":"Multivariate homogeneity of groups dispersions","title":"Phyloseq analysis template","text":"","code":"# Calculate distance dist <- vegan::vegdist(t(otu_microbiome), method=\"bray\") # betadisper is a multivariate analogue of Levene's test for homogeneity of variances mod_layer <- vegan::betadisper(   dist, meta_microbiome$layer, type=\"centroid\"   ) mod_layer$layer <- meta_microbiome$layer"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"tukeyhsd","dir":"Articles","previous_headings":"Data analysis","what":"TukeyHSD","title":"Phyloseq analysis template","text":"","code":"(tukey_test <- TukeyHSD(mod_layer)) #>   Tukey multiple comparisons of means #>     95% family-wise confidence level #>  #> Fit: aov(formula = distances ~ group, data = df) #>  #> $group #>             diff    lwr   upr p adj #> PF-AL    0.12407 -0.111 0.359 0.480 #> TZ1-AL   0.05798 -0.104 0.220 0.760 #> TZ2-AL   0.05981 -0.123 0.243 0.806 #> TZ1-PF  -0.06609 -0.307 0.174 0.873 #> TZ2-PF  -0.06426 -0.319 0.191 0.899 #> TZ2-TZ1  0.00183 -0.188 0.192 1.000 plot(tukey_test)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"pcoa-with-variance-in-axis","dir":"Articles","previous_headings":"Data analysis","what":"PCoA with variance in axis","title":"Phyloseq analysis template","text":"","code":"get_variance <- function(mod, number, digits = 2){   variance <- mod$eig[number]/sum(mod$eig)*100   variance |>     round(digits) |>      format(nsmall = digits) } x_label <- paste0('PCoA 1 (', get_variance(mod_layer, 1),'%)') y_label <- paste0('PCoA 2 (', get_variance(mod_layer, 2),'%)')  par(mfrow = c(1,2)) plot(   mod_layer,  hull=FALSE, ellipse=TRUE,   main = \"PCoA, layer\", sub=NULL,   col= RauENVS::get_wants_hue(seed = 10, n = 3, palette = \"default\"),   cex=2, lwd=1,   xlab = x_label,   ylab = y_label   ) #+"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"boxplot-of-distances-with-pvalues-from-tukey-test","dir":"Articles","previous_headings":"Data analysis","what":"Boxplot of distances with pvalues from Tukey Test","title":"Phyloseq analysis template","text":"can add p-values box plot distances:","code":"get_pos_whisker <- function(x){   # Calculate whisker position   hinge <- as.numeric(quantile(x, probs = 0.75))   upper_max <- hinge +IQR(x)*1.5    x |>      keep(~ . < upper_max) |>     max() } # Calculate label position pos <-  c(   by(mod_layer$distances, mod_layer$group, get_pos_whisker)   )  # You can run the next line for calculating automatically the # labels based in p-values. tukey_label <-   data.frame(     label = rownames(tukey_test$group)[which(       tukey_test$group[,'p adj']< 0.05       )]   ) |>   separate(label,sep = '-', into = c('from', 'to'),remove = T) %$%   data.frame(from = c(from, to), to = c(to, from)) |>   group_by(from)|>   summarise(label = paste0(to, collapse = ','))|>   column_to_rownames('from')|>   pull(label)  # However, for this data, there is no significance difference  # between groups. We can still plot those labels as example:  custom_label <- c('A', 'V', 'AV', 'T2')  tibble(   distances = mod_layer$distances,   group = mod_layer$group, ) |>   ggplot(aes(x = group, y = distances, fill = group))+   geom_boxplot()+   geom_text(     data = data.frame(       distances = pos,group = names(pos),label = custom_label       ),     aes(label = label),     hjust = -1, vjust = -0.5     )+   xlab('Layer')+ylab('Distance to Centroid')+   theme(legend.position = 'None')"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/articles/phyloseq_analysis.html","id":"annotating-nmds-with-information-from-permanova","dir":"Articles","previous_headings":"Data analysis","what":"Annotating NMDS with information from permanova","title":"Phyloseq analysis template","text":"“Numbers top indicate stress values. Asterisks represent significance level PERMANOVA (∗adjusted P < 0.05 ∗∗adjusted P < 0.01)” First, extract information permanova","code":"(   r2_label <- permanova_layer$R2[[1]] |>   round(2) |>   format(nsmall = 2) ) #> [1] \"0.42\" ( p_value_label <- permanova_layer$`Pr(>F)`[[1]]%>%   {case_when(     . < 0.01 ~ \"**\",     . < 0.05 ~ \"*\",     . >= 0.05 ~ \"\",     )} ) #> [1] \"**\" original_plot <- plot_ordination(   physeq_rel, physeq_nmds,   type =\"samples\", color = \"layer\",shape = \"layer\"   )+   geom_point(size=3)+   stat_ellipse()+   theme(     legend.position=\"bottom\",     legend.title = element_blank()     )  original_plot +   annotate(     geom=\"text\",     x = max(original_plot$data$NMDS1) + 0.4,     y = max(original_plot$data$NMDS2),     label= r2_label,     size = 5     )+   annotate(     geom=\"text\",     x = max(original_plot$data$NMDS1) + 0.4,     y = min(original_plot$data$NMDS2),     label= p_value_label,     size = 10     )"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francisco Campuzano. Author, maintainer.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Campuzano F (2023). RauENVS: AU-ENVS bioinformatics section miscellaneus RMarkdown notebooks functions. R package version 0.0.0.9000, https://au-envs-bioinformatics.github.io/RauENVS/.","code":"@Manual{,   title = {RauENVS: AU-ENVS bioinformatics section miscellaneus RMarkdown notebooks and functions},   author = {Francisco Campuzano},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://au-envs-bioinformatics.github.io/RauENVS/}, }"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/index.html","id":"miscellaneous-r-code-from-au-envs-bioinformatics","dir":"","previous_headings":"","what":"Miscellaneous R code from AU-ENVS Bioinformatics","title":"AU-ENVS bioinformatics section miscellaneus RMarkdown notebooks and functions","text":"repository contains RMarkdown notebooks various purposes High Throughput Sequencing Center Department Environmental Science, Aarhus University. Please, take look documentation see ’s available. distribute notebooks R package. , just need install (reinstall update ). package currently development internal use, ’s CRAN install GitHub can start using loading library find RMarkdown templates Rstudio. New file -> RMarkdown -> Template . Please close open Rstudio don’t see changes immediately :). Example using RMarkdown, download template Github (look “inst/rmarkdown/templates/) directory. notebooks called”skeleton.Rmd”.","code":"devtools::install_github(\"AU-ENVS-Bioinformatics/RauENVS\") library(RauENVS)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract features from Antismash json files — get_antismash_features","title":"Extract features from Antismash json files — get_antismash_features","text":"Extract features Antismash json files","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract features from Antismash json files — get_antismash_features","text":"","code":"get_antismash_features(jsons, features_types = NULL)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract features from Antismash json files — get_antismash_features","text":"jsons character vector valid filepaths. features_types list desired features types, default .","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract features from Antismash json files — get_antismash_features","text":"list list records.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a dataframe with module information from antiSMASH data — get_antismash_modules","title":"Creates a dataframe with module information from antiSMASH data — get_antismash_modules","text":"Creates dataframe module information antiSMASH data","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a dataframe with module information from antiSMASH data — get_antismash_modules","text":"","code":"get_antismash_modules(features)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a dataframe with module information from antiSMASH data — get_antismash_modules","text":"features List object generated get_antismash_features","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a dataframe with module information from antiSMASH data — get_antismash_modules","text":"tibble region observation","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a dataframe with region information from antiSMASH data — get_antismash_regions","title":"Creates a dataframe with region information from antiSMASH data — get_antismash_regions","text":"Creates dataframe region information antiSMASH data","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a dataframe with region information from antiSMASH data — get_antismash_regions","text":"","code":"get_antismash_regions(features)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a dataframe with region information from antiSMASH data — get_antismash_regions","text":"features List object generated get_antismash_features","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_antismash_regions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a dataframe with region information from antiSMASH data — get_antismash_regions","text":"tibble region observation","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract clustering information from bigscape — get_bigscape_clustering","title":"Extract clustering information from bigscape — get_bigscape_clustering","text":"Extract clustering information bigscape","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract clustering information from bigscape — get_bigscape_clustering","text":"","code":"get_bigscape_clustering(bigscape_dir)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract clustering information from bigscape — get_bigscape_clustering","text":"bigscape_dir valid filepath","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract clustering information from bigscape — get_bigscape_clustering","text":"DataFrame","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract network information from bigscape — get_bigscape_networks","title":"Extract network information from bigscape — get_bigscape_networks","text":"Extract network information bigscape","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract network information from bigscape — get_bigscape_networks","text":"","code":"get_bigscape_networks(bigscape_dir, cutoff = 0.3)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract network information from bigscape — get_bigscape_networks","text":"bigscape_dir valid filepath cutoff numeric value indicating cutoff.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_bigscape_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract network information from bigscape — get_bigscape_networks","text":"DataFrame","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_wants_hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a palette using I Want Hue — get_wants_hue","title":"Generate a palette using I Want Hue — get_wants_hue","text":"function allows generate palette colors using web https://medialab.github.io/iwanthue/","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_wants_hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a palette using I Want Hue — get_wants_hue","text":"","code":"get_wants_hue(n, seed = 1, palette = \"colorblind_friendly\")"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_wants_hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a palette using I Want Hue — get_wants_hue","text":"n numeric vector one desired number colors seed numeric vector one desired seed (palettes generated randomly) palette character vector one name palette want use. see available palettes run names(rwantshue::hcl_presets).","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_wants_hue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a palette using I Want Hue — get_wants_hue","text":"character vector hex codes.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/get_wants_hue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a palette using I Want Hue — get_wants_hue","text":"","code":"get_wants_hue(n = 5) #> [1] \"#b45093\" \"#65ae63\" \"#6b66bb\" \"#b7953c\" \"#b94e43\" get_wants_hue(n = 5, seed = 2) #> [1] \"#b94e43\" \"#65ad62\" \"#b45093\" \"#b7953c\" \"#6a67bc\" get_wants_hue(n = 5, seed = 2, palette = \"fluo\") #> [1] \"#ecbe6b\" \"#68e6c0\" \"#dde044\" \"#83e85a\" \"#c3e289\""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/make_physeq_tax_label_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","title":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","text":"function extract available deepest taxonomic label phyloseq taxonomyTable. still need assign (see example ).","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/make_physeq_tax_label_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","text":"","code":"make_physeq_tax_label_unique(taxtable)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/make_physeq_tax_label_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","text":"taxtable phyloseq-class instance","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/make_physeq_tax_label_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","text":"character vector unique taxonomic labels.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/make_physeq_tax_label_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make unique taxonomic labels from a Phyloseq taxonomyTable — make_physeq_tax_label_unique","text":"","code":"taxtable <- structure(   c(\"Bacteria\", \"Proteobacteria\", \"Deltaproteobacteria\",\"\", \"\", \"\", \"\"),   dim = c(1L, 7L),   dimnames = list(   \"sp1\", c(\"Kingdom\", \"Phylum\", \"Class\",\"Order\",    \"Family\", \"Genus\", \"Species\")    )) make_physeq_tax_label_unique(taxtable) #> [1] \"Deltaproteobacteria\""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/phyloseq_template_toy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Phyloseq template toy data — phyloseq_template_toy_data","title":"Phyloseq template toy data — phyloseq_template_toy_data","text":"subset data illustrate perform analysis OTU phyloseq, vegan microbiome.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/phyloseq_template_toy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phyloseq template toy data — phyloseq_template_toy_data","text":"","code":"phyloseq_template_toy_data"},{"path":[]},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/phyloseq_template_toy_data.html","id":"phyloseq-template-toy-data","dir":"Reference","previous_headings":"","what":"phyloseq_template_toy_data","title":"Phyloseq template toy data — phyloseq_template_toy_data","text":"list containing 3 DataFrames: meta Metadata table 29 samples 4 features (layer, age, pH depth). otu OTU table 29 samples 3,728 taxa groups. taxa Taxonomic table 7 ranks 3,728 taxa groups.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/remove_silva_prefix_from_taxtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","title":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","text":"function remove silva prefix Phyloseq taxonomy table. still need assign ","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/remove_silva_prefix_from_taxtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","text":"","code":"remove_silva_prefix_from_taxtable(taxtable)"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/remove_silva_prefix_from_taxtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","text":"taxtable taxonomy table phyloseq (obtained using tax_table())","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/remove_silva_prefix_from_taxtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","text":"character vector unique taxonomic labels.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/remove_silva_prefix_from_taxtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes Silva prefix from a Phyloseq taxonomyTable — remove_silva_prefix_from_taxtable","text":"","code":"taxtable <- structure(c(\"k__Bacteria\", \" p__Proteobacteria\", \"c__Deltaproteobacteria\", \" o__Oligoflexales\", \" f__0319-6G20\", \"g__\", \" s__\"), dim = c(1L, 7L), dimnames = list(\"sp1\", c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\"))) remove_silva_prefix_from_taxtable(taxtable) #>     Kingdom    Phylum           Class                 Order           #> sp1 \"Bacteria\" \"Proteobacteria\" \"Deltaproteobacteria\" \"Oligoflexales\" #>     Family      Genus Species #> sp1 \"0319-6G20\" \"\"    \"\""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/set_theme_AU_ENVS.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default AU-ENVS R theme — set_theme_AU_ENVS","title":"Set default AU-ENVS R theme — set_theme_AU_ENVS","text":"function override layout options affect graphics look. side effects.","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/set_theme_AU_ENVS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default AU-ENVS R theme — set_theme_AU_ENVS","text":"","code":"set_theme_AU_ENVS(locale = \"English_Denmark\")"},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/set_theme_AU_ENVS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default AU-ENVS R theme — set_theme_AU_ENVS","text":"locale character vector one indicating desired locale. time, default \"English_Denmark\" ok, although sometimes may want use \"Denmark_English\" option Danish months,  names, etc...","code":""},{"path":"https://au-envs-bioinformatics.github.io/RauENVS/reference/set_theme_AU_ENVS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set default AU-ENVS R theme — set_theme_AU_ENVS","text":"","code":"data <- data.frame(x = rnorm(10), y = rnorm(10), mode = rep(c(\"A\", \"B\"), 5)) ggplot2::ggplot(data, ggplot2::aes(x, y, color = mode))+   ggplot2::geom_point()  set_theme_AU_ENVS() #> Warning: OS reports request to set locale to \"English_Denmark\" cannot be honored ggplot2::ggplot(data, ggplot2::aes(x, y, color = mode))+   ggplot2::geom_point()"}]
